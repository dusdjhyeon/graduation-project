apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: adas-highway-scenario-
spec:
  entrypoint: highway-scenario
  templates:
  - name: highway-scenario
    dag:
      tasks:
      - name: highway-traffic
        template: highway-traffic-sim
      - name: vehicle-detection
        template: vehicle-detection
        dependencies: [highway-traffic]
      - name: lane-keeping
        template: lane-keeping-assist
        dependencies: [highway-traffic]
      - name: adaptive-cruise
        template: adaptive-cruise-control
        dependencies: [highway-traffic]
  
  - name: highway-traffic-sim    # 고속도로 교통 시뮬레이션 
    nodeSelector:
      "node-role.kubernetes.io/argo-spot-worker": "true"
    container:
      image: adas-sim:v1
      command: [python, highway_traffic_sim.py]
    
  - name: vehicle-detection     # 차량 감지
    retryStrategy:
      limit: 3
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 5m 
    nodeSelector:
      "node-role.kubernetes.io/argo-spot-worker": "true"
    container:
      image: adas-sim:v1
      command: [python, vehicle_detection.py]
    outputs:
      parameters:
      - name: result
        valueFrom:
          path: /tmp/execution-result
    onExit:
    - name: on-demand-execution
      when: "{{workflow.status}} != Succeed"
      container:
        image: adas-sim:v1
        command: [python, vehicle_detection.py]
    
  - name: lane-keeping-assist          # 차 선 유지 보조(real-time)
    container:
      image: adas-sim:v1
      command: [python, lane_keeping_assist.py]
    
  - name: adaptive-cruise-control       # 적응형 속도 조절(real-time)  
    container:
      image: adas-sim:v1
      command: [python, adaptive_cruise_control.py]
